{"ast":null,"code":"var _jsxFileName = \"/workspace/changwoo/React/src/App.js\",\n  _s = $RefreshSig$();\n// 어플리케이션의 진입점\n// 역할\n// 1. 전체 레이아웃을 관리하는 컴포넌트임 \n//    1.1 components에 있는 주요 컴포넌트를 관리함\n\nimport React, { useState } from 'react'; // React 라이브러리와 그안에 useState 훅을 불러옴. useState는 컴포넌트 내부에서 상태를 관리하는데 사용\nimport ChatWindow from './components/ChatWindow';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // app 컴포넌트 정의 (다른 모든 UI 요소를 포함)\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const toggleSidebar = () => {\n    setSidebarOpen(!isSidebarOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isSidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: isSidebarOpen,\n      toggleSidebar: toggleSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TYF1qS2G+JWlKmyUGb6fLjnkXgw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatWindow","Sidebar","Header","jsxDEV","_jsxDEV","App","_s","isSidebarOpen","setSidebarOpen","toggleSidebar","className","children","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/changwoo/React/src/App.js"],"sourcesContent":["// 어플리케이션의 진입점\n// 역할\n// 1. 전체 레이아웃을 관리하는 컴포넌트임 \n//    1.1 components에 있는 주요 컴포넌트를 관리함\n\n\nimport React, { useState } from 'react'; // React 라이브러리와 그안에 useState 훅을 불러옴. useState는 컴포넌트 내부에서 상태를 관리하는데 사용\nimport ChatWindow from './components/ChatWindow';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport './styles.css';\n\nfunction App() { // app 컴포넌트 정의 (다른 모든 UI 요소를 포함)\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n\n  const toggleSidebar = () => {\n    setSidebarOpen(!isSidebarOpen);\n  };\n\n  return (\n    <div className={`App ${isSidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\n      <Sidebar isOpen={isSidebarOpen} toggleSidebar={toggleSidebar} />\n      <div className=\"main-content\">\n        <Header />\n        <ChatWindow />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAE;EACf,MAAM,CAACC,aAAa,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1BD,cAAc,CAAC,CAACD,aAAa,CAAC;EAChC,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAE,OAAOH,aAAa,GAAG,cAAc,GAAG,gBAAgB,EAAG;IAAAI,QAAA,gBACzEP,OAAA,CAACH,OAAO;MAACW,MAAM,EAAEL,aAAc;MAACE,aAAa,EAAEA;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BP,OAAA,CAACF,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVZ,OAAA,CAACJ,UAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CAhBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}